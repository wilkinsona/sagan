
springBoot.mainClass = 'sagan.SiteMain'

applicationDefaultJvmArgs = [
        // Avoid PermGen errors during JRuby/Asciidoctor guide processing on JDK 7 with `gradle :sagan-site:bootRun`
        // See http://www.gradle.org/docs/1.7/release-notes#specify-default-jvm-arguments-for-the-application-plugin
        "-XX:MaxPermSize=128M",
        // Set SAGAN_HOME env variable to the root of sagan project. This allows to register an additional
        // resource handler location and serve static resources directly from the sagan-client module during dev.
        // See sagan.ClientResourcesConfig
        "-DSAGAN_HOME=${rootProject.rootDir}"
]

dependencies {
    def vHttpCore = '4.3.2'

    compile project(':sagan-common')
    compile project(':sagan-client')

    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.security:spring-security-acl"

    // Thymeleaf is used as the template engine for serving HTML
    compile 'org.thymeleaf:thymeleaf-spring4'
    compile 'org.thymeleaf:thymeleaf'
    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    compile 'com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute:1.3'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity3'

    // nekohtml is required for thymeleaf's LEGACYHTML5 mode
    runtime 'net.sourceforge.nekohtml:nekohtml'

    // for use in generating blog atom feeds
    compile 'net.java.dev.rome:rome:'

    // for use by spring-social-github's OAuth2 support
    // note that 'runtime' scope would be enough, but 'compile'
    // helps override conflicting httpclient versions
    compile "org.apache.httpcomponents:httpclient"
    compile "org.apache.httpcomponents:httpcore:${vHttpCore}"
    compile "org.apache.httpcomponents:httpcore-nio:${vHttpCore}"

    // for use in serving redirects; see urlrewrite.xml
    compile 'org.tuckey:urlrewritefilter:4.0.3'

    // for use in mocking http interactions
    testCompile "org.springframework:spring-test"

    // pick up common test utility classes
    testCompile project(':sagan-common').sourceSets.testUtil.output
}